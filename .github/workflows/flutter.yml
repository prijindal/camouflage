on:
  push:
    branches:
      - main

name: Flutter

defaults:
  run:
    shell: bash
    working-directory: ./apps/mobile

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: "flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            build/
            android/.gradle/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('**/*.gradle*', 'pubspec.lock') }}
      - run: flutter --version
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: flutter analyze --no-fatal-infos
      # - run: flutter test
      - name: save release key
        env:
          KEY_FILE_BASE64: ${{ secrets.KEY_FILE_BASE64 }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "$KEY_FILE_BASE64" | base64 -d > "$(pwd)/release.keystore"
          echo "storeFile=$(pwd)/release.keystore" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
          echo "storePassword=$KEY_PASSWORD" >> android/key.properties
          echo "VERSION_CODE=$GITHUB_RUN_NUMBER" > android/version.properties

      - run: curl -sL https://firebase.tools | bash
      - run: echo "$FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL" > google-application-credentials.json
        env:
          FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL: ${{secrets.FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL}}
      - run: flutterfire configure -y --platforms=android --ios-bundle-id=com.camouflage.camouflage --macos-bundle-id=com.camouflage.camouflage --web-app-id=1:739292996360:web:5c24f4c3b47c73559e82bd --android-package-name=com.camouflage.camouflage
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      - run: flutter build apk --release
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: apps/mobile/build/app/outputs/apk/release
          destination_dir: ${{ github.repository }}/${{ github.ref_name }}/android
      - run: flutter build appbundle --release
      # - uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
      #     packageName: com.camouflage.camouflage
      #     track: internal
      #     status: completed
      #     releaseFiles: build/app/outputs/bundle/release/app-release.aab
      #     mappingFile: build/app/outputs/mapping/release/mapping.txt

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: "flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Cache
        uses: actions/cache@v3
        with:
          path: build/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('pubspec.lock') }}

      - run: flutter --version
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: flutter analyze --no-fatal-infos
      # - run: flutter test --coverage
      - uses: codecov/codecov-action@v3
        with:
          flags: app-flutter
      - run: curl -sL https://firebase.tools | bash
      - run: echo "$FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL" > google-application-credentials.json
        env:
          FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL: ${{secrets.FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL}}
      - run: flutterfire configure -y --platforms=web --ios-bundle-id=com.camouflage.camouflage --macos-bundle-id=com.camouflage.camouflage --web-app-id=1:739292996360:web:5c24f4c3b47c73559e82bd --android-package-name=com.camouflage.camouflage
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      - run: flutter build linux --release
      - uses: vimtor/action-zip@v1.1
        with:
          files: apps/mobile/build/linux/x64/release/bundle/
          dest: apps/mobile/build/linux/x64/release/zip/linux.zip
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: apps/mobile/build/linux/x64/release/zip
          destination_dir: ${{ github.repository }}/${{ github.ref_name }}/linux
      - run: flutter build web --release
      - uses: vimtor/action-zip@v1.1
        with:
          files: apps/mobile/build/web/
          dest: apps/mobile/build/web-zip/web.zip
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: apps/mobile/build/web-zip
          destination_dir: ${{ github.repository }}/${{ github.ref_name }}/web
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL }}"
          channelId: live
          projectId: camouflage-14147
          entryPoint: apps/mobile

  macos:
    if: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: "flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Cache
        uses: actions/cache@v3
        with:
          path: build/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('pubspec.lock') }}

      - run: flutter --version
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: flutter analyze --no-fatal-infos
      # - run: flutter test
      - run: curl -sL https://firebase.tools | bash
      - run: echo "$FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL" > google-application-credentials.json
        env:
          FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL: ${{secrets.FIREBASE_SERVICE_ACCOUNT_CAMOUFLAGE_PRIJINDAL}}
      - run: flutterfire configure -y --platforms=macos,ios --ios-bundle-id=com.camouflage.camouflage --macos-bundle-id=com.camouflage.camouflage --web-app-id=1:739292996360:web:5c24f4c3b47c73559e82bd --android-package-name=com.camouflage.camouflage
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      - run: flutter build macos --release
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: apps/mobile/build/macos
          destination_dir: ${{ github.repository }}/${{ github.ref_name }}/macos
      - run: flutter build ios --release --no-codesign
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: apps/mobile/build/ios
          destination_dir: ${{ github.repository }}/${{ github.ref_name }}/ios

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: "flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Cache
        uses: actions/cache@v3
        with:
          path: build/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('pubspec.lock') }}

      - run: flutter --version
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: flutter analyze --no-fatal-infos
      # - run: flutter test
      - run: flutter build windows --release
      - uses: vimtor/action-zip@v1.1
        with:
          files: apps/mobile/build/windows/x64/runner/Release/
          dest: apps/mobile/build/windows/zip/windows.zip
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: apps/mobile/build/windows/zip
          destination_dir: ${{ github.repository }}/${{ github.ref_name }}/windows
